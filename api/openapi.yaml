openapi: 3.0.0
info:
  version: 1.0.0
  title: Taraxa Indexer
  description: >-
    The Taraxa Indexer saves all PBFT Blocks, DAG Blocks and Transactions on the
    Taraxa chain and exposes an API on top of that data that can be used on the
    Taraxa Explorer
  contact:
    name: Taraxa Team
    email: contact@taraxa.io
    url: https://taraxa.io
  license:
    name: MIT
    url: https://mit-license.org/
servers:
  - url: https://indexer.mainnet.taraxa.io
    description: Mainnet network
  - url: https://indexer.testnet.taraxa.io
    description: Testnet network
  - url: https://indexer.devnet.taraxa.io
    description: Devnet network
paths:
  /totalSupply:
    get:
      tags:
        - TotalSupply
      summary: "Returns total supply"
      description: |
        Returns total supply
      operationId: "getTotalSupply"
      responses:
        "200":
          description: |
            Current total supply as string as value could be pretty big
          content:
            application/json:
              schema:
                properties:
                  currentSupply:
                    type: string
                    example: "1234567890"
        default:
          description: |
            Unexpected error
  /validators:
    get:
      tags:
        - Validators
      summary: "Returns all validators"
      description: |
        Returns all validators for the selected week and the number of PBFT blocks they produced
      operationId: "getValidators"
      parameters:
        - $ref: "#/components/parameters/weekParam"
        - $ref: "#/components/parameters/paginationParam"
      responses:
        "200":
          description: |
            A JSON array of validators
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ValidatorsPaginatedResponse"
        default:
          description: |
            Unexpected error
  /validators/total:
    get:
      tags:
        - Validators
      summary: "Returns total number of PBFT blocks"
      description: |
        Returns total number of PBFT blocks produced in selected week
      operationId: "getValidatorsTotal"
      parameters:
        - $ref: "#/components/parameters/weekParam"
      responses:
        "200":
          description: |
            A JSON object containing the total number of PBFT blocks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CountResponse"
        default:
          description: |
            Unexpected error
  /validators/{address}:
    get:
      tags:
        - Validators
      summary: "Returns info about the validator"
      description: |
        Returns info about the validator for the selected week
      operationId: "getValidator"
      parameters:
        - $ref: "#/components/parameters/addressParam"
        - $ref: "#/components/parameters/weekParam"
      responses:
        "200":
          description: |
            A JSON object with info about validator
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Validator"
        default:
          description: |
            Unexpected error
  /address/{address}/stats:
    get:
      tags:
        - Address
      summary: "Returns stats for the address"
      description: |
        Returns total number of PBFT blocks, DAG blocks and Transactions produced for the selected address
      operationId: "getAddressStats"
      parameters:
        - $ref: "#/components/parameters/addressParam"
      responses:
        "200":
          description: |
            A JSON object containing the total number of PBFT blocks produced for the selected address
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatsResponse"
        default:
          description: |
            Unexpected error
  /address/{address}/transactions:
    get:
      tags:
        - Address
      summary: "Returns all transactions"
      description: |
        Returns all transactions from and to the selected address
      operationId: "getAddressTransactions"
      parameters:
        - $ref: "#/components/parameters/addressParam"
        - $ref: "#/components/parameters/paginationParam"
      responses:
        "200":
          description: |
            A JSON object containing a list of all of the transactions for the selected address
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/TransactionsPaginatedResponse"
        default:
          description: |
            Unexpected error
  /address/{address}/dags:
    get:
      tags:
        - Address
      summary: "Returns all DAG blocks"
      description: |
        Returns all DAG blocks sent by the selected address
      operationId: "getAddressDags"
      parameters:
        - $ref: "#/components/parameters/addressParam"
        - $ref: "#/components/parameters/paginationParam"
      responses:
        "200":
          description: |
            A JSON object containing a list of all of the DAG blocks sent from the selected address
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/DagsPaginatedResponse"
        default:
          description: |
            Unexpected error
  /address/{address}/pbfts:
    get:
      tags:
        - Address
      summary: "Returns all PBFT blocks"
      description: |
        Returns all PBFT blocks produced by the selected address
      operationId: "getAddressPbfts"
      parameters:
        - $ref: "#/components/parameters/addressParam"
        - $ref: "#/components/parameters/paginationParam"
      responses:
        "200":
          description: |
            A JSON object containing a list of all of the PBFT blocks produced by the selected address
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PbftsPaginatedResponse"
        default:
          description: |
            Unexpected error
  /transaction/{hash}/internal_transactions:
    get:
      tags:
        - Hash
      summary: "Returns internal transactions"
      description: |
        Returns all internal transactions of transaction with specified hash 
      operationId: "getInternalTransactions"
      parameters:
        - $ref: "#/components/parameters/hashParam"
      responses:
        "200":
          description: |
            A JSON object containing a list of all internal transactions of transaction with specified hash 
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/InternalTransactionsResponse"
        default:
          description: |
            Unexpected error
components:
  schemas:
    Address:
      type: string
      example: "0x0000000000000000000000000000000000000000"
    Hash:
      type: string
      example: "0x0000000000000000000000000000000000000000000000000000000000000000"
    Counter:
      type: integer
      format: uint64
      example: 123
    LastTimestamp:
      type: integer
      format: uint64
      example: 1676682705
      nullable: true
      # for optional values we should also specify extra rlp tag as below. this extras don't working with $refs
      x-oapi-codegen-extra-tags:
        rlp: "nil"
    Timestamp:
      type: integer
      format: uint64
      example: 1676682705
    Week:
      type: object
      properties:
        week:
          type: integer
          format: int32
          minimum: 1
          default: 1
          nullable: true
        year:
          type: integer
          format: int32
          minimum: 2022
          default: 2023
          nullable: true
    Period:
      type: object
      required:
        - startDate
        - endDate
        - hasNext
      properties:
        startDate:
          $ref: "#/components/schemas/Timestamp"
        endDate:
          $ref: "#/components/schemas/Timestamp"
        hasNext:
          type: boolean
          default: true
    Validator:
      type: object
      required:
        - rank
        - address
        - pbftCount
      properties:
        rank:
          type: integer
          format: uint64
          example: 1
          x-oapi-codegen-extra-tags:
            rlp: "-"
        address:
          $ref: "#/components/schemas/Address"
        pbftCount:
          $ref: "#/components/schemas/Counter"
    Transaction:
      type: object
      required:
        - hash
        - blockNumber
        - transactionIndex
        - from
        - to
        - value
        - gasUsed
        - gasPrice
        - nonce
        - timestamp
        - status
        - type
      properties:
        hash:
          $ref: "#/components/schemas/Hash"
        blockNumber:
          $ref: "#/components/schemas/Counter"
        transactionIndex:
          $ref: "#/components/schemas/Counter"
        from:
          $ref: "#/components/schemas/Address"
        to:
          $ref: "#/components/schemas/Address"
        value:
          type: string
          example: "0"
        gasUsed:
          $ref: "#/components/schemas/Counter"
        gasPrice:
          $ref: "#/components/schemas/Counter"
        nonce:
          $ref: "#/components/schemas/Counter"
        timestamp:
          $ref: "#/components/schemas/Timestamp"
        status:
          type: boolean
          example: true
        type:
          type: integer
          format: uint8
          enum: [0, 1, 2]
          x-enum-varnames: [transfer, contract_call, contract_creation]
    Dag:
      type: object
      required:
        - sender
        - hash
        - level
        - transactionCount
        - timestamp
      properties:
        sender:
          $ref: "#/components/schemas/Address"
        hash:
          $ref: "#/components/schemas/Hash"
        level:
          $ref: "#/components/schemas/Counter"
        transactionCount:
          $ref: "#/components/schemas/Counter"
        timestamp:
          $ref: "#/components/schemas/Timestamp"
    Pbft:
      type: object
      required:
        - author
        - hash
        - pbftHash
        - number
        - transactionCount
        - timestamp
      properties:
        author:
          $ref: "#/components/schemas/Address"
        hash:
          $ref: "#/components/schemas/Hash"
        pbftHash:
          $ref: "#/components/schemas/Hash"
        number:
          $ref: "#/components/schemas/Counter"
        transactionCount:
          $ref: "#/components/schemas/Counter"
        timestamp:
          $ref: "#/components/schemas/Timestamp"
    WeekResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/Week"
        - $ref: "#/components/schemas/Period"
    CountResponse:
      type: object
      required:
        - total
      properties:
        total:
          $ref: "#/components/schemas/Counter"
    StatsResponse:
      type: object
      required:
        - pbftCount
        - dagsCount
        - transactionsCount
        - lastPbftTimestamp
        - lastDagTimestamp
        - lastTransactionTimestamp
      properties:
        pbftCount:
          $ref: "#/components/schemas/Counter"
        dagsCount:
          $ref: "#/components/schemas/Counter"
        transactionsCount:
          $ref: "#/components/schemas/Counter"
        lastPbftTimestamp:
          $ref: "#/components/schemas/LastTimestamp"
        lastDagTimestamp:
          $ref: "#/components/schemas/LastTimestamp"
        lastTransactionTimestamp:
          $ref: "#/components/schemas/LastTimestamp"
    PaginatedResponse:
      type: object
      required:
        - total
        - start
        - end
        - hasNext
      properties:
        total:
          $ref: "#/components/schemas/Counter"
        start:
          $ref: "#/components/schemas/Counter"
        end:
          $ref: "#/components/schemas/Counter"
        hasNext:
          type: boolean
          default: true
    ValidatorsPaginatedResponse:
      allOf:
        - $ref: "#/components/schemas/PaginatedResponse"
      properties:
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Validator"
        week:
          $ref: "#/components/schemas/WeekResponse"
    TransactionsPaginatedResponse:
      allOf:
        - $ref: "#/components/schemas/PaginatedResponse"
      properties:
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Transaction"
    DagsPaginatedResponse:
      allOf:
        - $ref: "#/components/schemas/PaginatedResponse"
      properties:
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Dag"
    PbftsPaginatedResponse:
      allOf:
        - $ref: "#/components/schemas/PaginatedResponse"
      properties:
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Pbft"
    InternalTransactionsResponse:
      required:
        - data
      properties:
        data:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Transaction"
    AddressFilter:
      $ref: "#/components/schemas/Address"
    PaginationFilter:
      type: object
      required:
        - limit
      properties:
        start:
          type: integer
          format: uint64
          default: 0
          nullable: true
        limit:
          type: integer
          format: uint64
          minimum: 1
          maximum: 100
          default: 30
  parameters:
    addressParam:
      name: address
      in: path
      description: |
        Address to filter by
      required: true
      schema:
        $ref: "#/components/schemas/AddressFilter"
    paginationParam:
      name: pagination
      in: query
      required: true
      description: |
        Pagination
      schema:
        $ref: "#/components/schemas/PaginationFilter"
    weekParam:
      name: week
      in: query
      required: false
      description: |
        Week to filter by
      schema:
        $ref: "#/components/schemas/Week"
    hashParam:
      name: hash
      in: path
      required: true
      description: |
        Hash of the item(transaction) to get data for
      schema:
        $ref: "#/components/schemas/Hash"
