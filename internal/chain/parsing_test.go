package chain

import (
	"encoding/json"
	"testing"

	"github.com/Taraxa-project/taraxa-indexer/internal/common"
	"github.com/go-playground/assert/v2"
)

func TestTraceParsing(t *testing.T) {
	json_str := ` {
		"output": "0x",
		"stateDiff": null,
		"trace": [
			{
				"action": {
					"callType": "call",
					"from": "0x99a2d5feaecb1a729d4f9af4197cc03bb9a37bc3",
					"gas": "0x5af868",
					"input": "0xd2d745b10000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000090000000000000000000000000dc0d841f962759da25547c686fa440cf6c28c61000000000000000000000000f1c587a22fbf80af80446fa17e7322952f18456c000000000000000000000000cddb0d484ca1c625ffca0882396ef34ffff242e300000000000000000000000010ce6f9c7c22f82214c40755b3eea5f126a7148d000000000000000000000000d42eaa28c5eafee9a0040a7ac74dd3f4b57678bd000000000000000000000000ec15db470db85cc75b0e3fa5b6a0c607a5e8c64a000000000000000000000000a4195def477491ef7f00b8688c9b8032cd71bb2a0000000000000000000000008f1567bb4381f4ed53dbeb3c0dca5c4f189a111000000000000000000000000052124d5982576507dd4a18d6607225e64be168bb0000000000000000000000000000000000000000000000000000000000000009000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000000000000000000000000000000000e8d4a51000000000000000000000000000000000000000000000000000000000e8d4a51000",
					"to": "0x1578f035581f664efa85a6da822464bd9edd8850",
					"value": "0x82f79cd9000"
				},
				"result": {
					"gasUsed": "0x43b61",
					"output": "0x"
				},
				"subtraces": 9,
				"traceAddress": [],
				"type": "call"
			},
			{
				"action": {
					"callType": "call",
					"from": "0x1578f035581f664efa85a6da822464bd9edd8850",
					"gas": "0x8fc",
					"input": "0x",
					"to": "0x0dc0d841f962759da25547c686fa440cf6c28c61",
					"value": "0xe8d4a51000"
				},
				"result": {
					"gasUsed": "0x0",
					"output": "0x"
				},
				"subtraces": 0,
				"traceAddress": [
					0
				],
				"type": "call"
			}
		]
	}`
	trace := new(common.TransactionTrace)
	err := json.Unmarshal([]byte(json_str), trace)
	if err != nil {
		t.Fatal(err)
	}
}

func TestDagBlockParsing(t *testing.T) {
	json_str := `{
		"hash": "0x5c9442c06330afe9f484a2591165d551f2aa46b7f253f223717e1c90114bbdc1",
		"level": "0x186a20d",
		"period": "0x7f0ef5",
		"pivot": "0x276505a89984b9d7ef6611de0f741cfcc67d6b361c17114acb6eed19d9b60c31",
		"sender": "0xe90958a7e4a95ee0c3e2b36dcf6344835755fcfd",
		"sig": "0x426e08762eae110a358a9fa5847902512fe45967981d83521b7fe93ce3b2862f77c944b734375d5e269cb5e5646697cb5499a91b9f3b23e5834b96664419ac3d01",
		"timestamp": "0x65fe340e",
		"tips": [],
		"transactions": [
		  "0xd018d3944d714e596a527e1e1d8989614bbd9db84e086a1bb9fe90a8859089c6",
		  "0x09e1a94d6f19d4a0f561c4c8d9f11ce028548e21255b74c2840b64364f9aa752",
		  "0x7fa24973443ca4096c698134e35ab73eb5e765b18dee6527206573844a88a092",
		  "0xb7875d7fa0fc0b0e86be53428bf4e0c612cae1a54abcfe0eb800a965fc4182e1",
		  "0x54c81b2de69b3dd890274a5347100948dcc398f809bf5a6e1eeb38ee2c08705b",
		  "0xb3a7634ae4fab5754a6e37128654bb51e6927ffe528178765cd358a701640a6e",
		  "0xb0aa7d403beb3c285f224f5683f607409bd8633806a024a3f6068539220b36dc",
		  "0x17aea6647dc11cc583f208ca7c5f274605688c9b3b02d539b769e0f6f98bb087",
		  "0xd8482fdd202b58778ff36e3d8a84b1b317897634a9217aa58469ff476135a3f7",
		  "0x938b190b8a028f76c1c2064cf08afdc37b844915644474c9489a226dc38c8b25",
		  "0x52f92cd940f4a9d6a8fb7eb7f00f7a3d98b4e763b3145ad6f7c9cf86d479633d"
		],
		"trx_estimations": "0x38658",
		"vdf": {
		  "difficulty": "0x10",
		  "proof": "0xfb556ce975730fa3ea3dc35bc2bbe137d2195a52ee7c5a52f13a32d8efd8a7190f4724f8d03fe3fc9c6321e3c7ded792076b355766d0c5412e946b2d26eaa0d77d57784757cdf1fd382054d33efffb0e",
		  "sol1": "0x2002aa0e45b3ef084cd3b10e333f58876dee38cc9b8335f1186be992853fd359d37275a4e6e8fa2fd237d057b01618c583d5da301565ced863b9a13e826bd80acd182ced5adac71ca86197e4e0fec6135e0e88c050619c581fc7ff375df69e1f0e17d83c364a43ea67cfb5c968dcb5469f9a47fd4b2c33c4845ab162d0b45ea6c50eedb6bda9f9d83041e2f60d19b93b4c2c0def67f54cac04a9b90bf4d9621f94992e64a8fb8f5e5a180aa1ef0f786904bfc85eabde7e7bf5348b83428c4d6b696c257fa93e47fe6c025b87d1ed613b5aaacfc8afb79d7232fe301a413109c73c6b44a2d4ba516dce960a91ab568b3ef257fca6f3b3b11646dd77af8528654b",
		  "sol2": "0x1bf2d94d97dcc676ef07f1e1769bd89e1dfd99d0715114ce70cd5da1ddd4a1e2e2d927e9653d4b2921d5cb9ef0d0a38f51e2993f643a38bdf033cc5f34ee7ac560efbf74d08855e5c6c59091cc69fca8a059eb7920e2c105900e174e715e375b126a767515997837a595dbde078f83e503f9cc2c0ea84265e1c247fe6bd853d6c25696ca50398b70a4ecc7501e9da17dc56fb7a45807db15923dc7b704f09dba5b778e99d371b314bf8dc6f1f9437f8fdddf4c76b528c200cb735883504ab19d422972c987fa1559984a863e20f4ac52c69529cba248c6ef6a8d86db9f26a8ec666d3dd81ad3050d58105f38c2b04eeb134f736875fd3a860e2b2f8b4cc1f94f"
		}
	  }`
	dag := new(common.DagBlock)
	err := json.Unmarshal([]byte(json_str), dag)
	assert.Equal(t, err, nil)
	assert.Equal(t, dag.Dag.Hash, "0x5c9442c06330afe9f484a2591165d551f2aa46b7f253f223717e1c90114bbdc1")
	assert.Equal(t, dag.Dag.Level, uint64(0x186a20d))
	assert.Equal(t, dag.Dag.Timestamp, uint64(0x65fe340e))
	assert.Equal(t, dag.Sender, "0xe90958a7e4a95ee0c3e2b36dcf6344835755fcfd")
	assert.Equal(t, dag.Vdf.Difficulty, uint16(0x10))
}
